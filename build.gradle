plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.8'
    id 'io.spring.dependency-management' version '1.1.0'
}
//task runApp(type: JavaExec) {
//    classpath = sourceSets.main.runtimeClasspath
//    mainClass = 'be.kdg.groepi.GroepIApplication'
//    systemProperty('GOOGLE_CLIENT_ID', System.getenv('GOOGLE_CLIENT_ID'))
//    systemProperty('GOOGLE_CLIENT_SECRET', System.getenv('GOOGLE_CLIENT_SECRET'))
//    systemProperty('FACEBOOK_CLIENT_ID', System.getenv('FACEBOOK_CLIENT_ID'))
//    systemProperty('FACEBOOK_CLIENT_SECRET', System.getenv('FACEBOOK_CLIENT_SECRET'))
//    systemProperty('FACEBOOK_TOKEN', System.getenv('FACEBOOK_TOKEN'))
//    systemProperty('EMAIL_USERNAME', System.getenv('EMAIL_USERNAME'))
//    systemProperty('EMAIL_PASSWORD', System.getenv('EMAIL_PASSWORD'))
//    systemProperty('EMAIL_HOST', System.getenv('EMAIL_HOST'))
//    systemProperty('EMAIL_PORT', System.getenv('EMAIL_PORT'))
//    systemProperty('POSTGRES_PROD_USERNAME', System.getenv('POSTGRES_PROD_USERNAME'))
//    systemProperty('POSTGRES_PROD_PASSWORD', System.getenv('POSTGRES_PROD_PASSWORD'))
//    systemProperty('POSTGRES_HOST', System.getenv('POSTGRES_HOST'))
//}
group = 'be.kdg'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.security:spring-security-oauth2-client'
    implementation 'org.springframework.security:spring-security-oauth2-jose'
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation 'org.webjars:bootstrap:5.2.3'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.webjars:webjars-locator:0.45'
    implementation 'org.webjars.npm:bootstrap-icons:1.9.1'
    implementation 'com.google.code.gson:gson:2.10'
    implementation 'com.google.zxing:core:3.4.1'
    implementation 'org.ocpsoft.prettytime:prettytime:5.0.1.Final'
    implementation 'org.modelmapper:modelmapper:3.1.1'
    implementation 'commons-fileupload:commons-fileupload:1.5'
    implementation 'com.google.cloud:google-cloud-storage:2.22.0'
    implementation('com.github.javafaker:javafaker:1.0.2') {
        exclude group: 'org.yaml', module: 'snakeyaml'
    }
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.springframework.cloud:spring-cloud-gcp-starter-sql-postgresql:1.2.8.RELEASE'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
